{"ast":null,"code":"var _jsxFileName = \"/home/soumitha/projects/Hackathon-revv/top-talented-tutorials/src/Context/ContextProvider.jsx\";\nimport React, { useState } from \"react\";\nexport const AuthContext = React.createContext();\n\nfunction ContextProvider(props) {\n  const [login, setLogin] = useState(false);\n  const [register, setRegister] = useState(false);\n  const [loginUser, setLoginUser] = useState([]);\n  const [registerUser, setRegisterUser] = useState([]);\n\n  const registration = data => {\n    setRegisterUser([...registerUser, data]);\n    setRegister(true);\n    setLogin(true);\n    setLoginUser(data);\n  };\n\n  const loggedIn = data => {\n    let temp = registerUser.find(item => item.email === data.email && item.password === data.password);\n\n    if (temp.length === 0) {\n      alert(\"Wrong Username and Password!\");\n    } else {\n      setLogin(true);\n      setLoginUser([data]);\n      alert(\"Login Successfully!\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      login,\n      register,\n      loginUser,\n      registerUser,\n      loggedIn,\n      registration\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\nexport default ContextProvider;","map":{"version":3,"sources":["/home/soumitha/projects/Hackathon-revv/top-talented-tutorials/src/Context/ContextProvider.jsx"],"names":["React","useState","AuthContext","createContext","ContextProvider","props","login","setLogin","register","setRegister","loginUser","setLoginUser","registerUser","setRegisterUser","registration","data","loggedIn","temp","find","item","email","password","length","alert","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;;AAEP,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMa,YAAY,GAAIC,IAAD,IAAU;AAC3BF,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBG,IAAlB,CAAD,CAAf;AACAN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,YAAY,CAACI,IAAD,CAAZ;AACH,GALD;;AAOA,QAAMC,QAAQ,GAAID,IAAD,IAAU;AACvB,QAAIE,IAAI,GAAGL,YAAY,CAACM,IAAb,CAAkBC,IAAI,IAAKA,IAAI,CAACC,KAAL,KAAeL,IAAI,CAACK,KAApB,IAA6BD,IAAI,CAACE,QAAL,KAAkBN,IAAI,CAACM,QAA/E,CAAX;;AACA,QAAIJ,IAAI,CAACK,MAAL,KAAgB,CAApB,EAAuB;AACnBC,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KAFD,MAGK;AACDhB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,MAAAA,YAAY,CAAC,CAACI,IAAD,CAAD,CAAZ;AACAQ,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACJ,GAVD;;AAYA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACjB,MAAAA,KAAD;AAAQE,MAAAA,QAAR;AAAkBE,MAAAA,SAAlB;AAA6BE,MAAAA,YAA7B;AAA2CI,MAAAA,QAA3C;AAAqDF,MAAAA;AAArD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACmB,QADX,CADJ;AAKH;;AAED,eAAepB,eAAf","sourcesContent":["import React, { useState } from \"react\"\n\n\nexport const AuthContext = React.createContext()\n\nfunction ContextProvider (props) {\n\n    const [login, setLogin] = useState(false)\n    const [register, setRegister] = useState(false)\n    const [loginUser, setLoginUser] = useState([])\n    const [registerUser, setRegisterUser] = useState([])\n\n    const registration = (data) => {\n        setRegisterUser([...registerUser, data])\n        setRegister(true)\n        setLogin(true)\n        setLoginUser(data)\n    }\n\n    const loggedIn = (data) => {\n        let temp = registerUser.find(item => (item.email === data.email && item.password === data.password))\n        if (temp.length === 0) {\n            alert(\"Wrong Username and Password!\")\n        }\n        else {\n            setLogin(true)\n            setLoginUser([data])\n            alert(\"Login Successfully!\")\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{login, register, loginUser, registerUser, loggedIn, registration }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default ContextProvider"]},"metadata":{},"sourceType":"module"}